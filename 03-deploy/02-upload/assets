#!/bin/bash

################################################################################
#
# For this script to work, we will need a small convention
#
# Variables in an asset file
#
# + Node
# + Type: nodekey, address, constellation-prv, constellation-pub, genesis.json
# + Number: 0, 1, 2, ..., N
#
# A file will have as name the formula node-type-number
# ex: 0-address-0
# The uploader will parse the names accordingly
#
# As genesis.json is unique for all nodes, it will not carry node prefix
#
################################################################################

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $CURRENT_DIR/_header

echo Uploading assets

NODE=0
while true; do
	if [ -f $ASSETS_DIR/${NODE}-nodekey ]; then
		echo -e "\nUploading nodekey, genesis.jsoni; and constellation keys and conf for node ${NODE}"

		ssh -i $SSL_CERT_PATH $SSH_USERNAME@${NODES[$NODE]} "mkdir -p ~/ethereum/keystore &> /dev/null"
		scp -i $SSL_CERT_PATH $ASSETS_DIR/${NODE}-nodekey $SSH_USERNAME@${NODES[$NODE]}:ethereum/nodekey
		scp -i $SSL_CERT_PATH $ASSETS_DIR/genesis.json $SSH_USERNAME@${NODES[$NODE]}:ethereum/genesis.json
		scp -i $SSL_CERT_PATH $ASSETS_DIR/${NODE}-constellation-prv $SSH_USERNAME@${NODES[$NODE]}:ethereum/constellation-prv
		scp -i $SSL_CERT_PATH $ASSETS_DIR/${NODE}-constellation-pub $SSH_USERNAME@${NODES[$NODE]}:ethereum/constellation-pub
		scp -i $SSL_CERT_PATH $ASSETS_DIR/${NODE}-constellation-conf $SSH_USERNAME@${NODES[$NODE]}:ethereum/constellation-conf

		ADDRESS_ID=0
		while true; do
			if [ -f $ASSETS_DIR/${NODE}-address-${ADDRESS_ID} ]; then
				echo -e "\nUploading address ${ADDRESS_ID} for node ${NODE}"
				scp -i $SSL_CERT_PATH $ASSETS_DIR/${NODE}-address-${ADDRESS_ID} \
					$SSH_USERNAME@${NODES[$NODE]}:ethereum/keystore/address-${ADDRESS_ID}

				ADDRESS_ID=$((ADDRESS_ID+1))
			else
				break
			fi
		done

		NODE=$((NODE+1))
	else
		break
	fi
done
